// Generated by CoffeeScript 1.12.2
(function() {
  this.Pictionary = {
    words: {
      person: ["Jesus", "Muhammad", "Michael Jackson", "Adolf Hitler", "Albert Einstein", "Leonardo Da Vinci", "Sir Isaac Newton", "Abraham Lincoln", "Mahatma Gandhi", "Aristotle", "London", "Bangkok", "Paris", "Dubai", "Istanbul", "New York", "Singapore", "Kuala Lumpur", "Seoul", "Hong Kong", "Tokyo", "Barcelona", "Amsterdam", "Rome", "Milan", "Taipei", "Shanghai", "Vienna", "Prague", "Los Angeles", "Ape", "Bat", "Cat", "Dog", "Lion", "Leopard", "Tiger", "Donkey", "Fox"],
      object: ["Diary", "Bottle", "Water", "Packet", "Chewing gum", "Tissue", "Glasses", "Watch", "Sweet", "Photo", "Camera", "Stamp", "Postcard", "Dictionary", "Coin", "Brush", "Credit card", "Identity card", "Key", "Mobile phone", "Phone card", "Wallet", "Button", "Umbrella", "Pen", "Pencil", "Lighter", "Cigarette", "Match", "Lipstick", "Purse", "Case", "Clip", "Scissors", "Rubber", "File", "Banknote", "Passport", "Driving licence", "Comb", "Notebook", "Laptop", "Rubbish", "Mirror", "Painkiller", "Sunscreen", "Toothbrush", "Headphone", "Player", "Battery", "Light bulb", "Bin", "Newspaper", "Magazine", "Alarm clock"],
      action: ["Buy", "Sell", "Run", "Walk", "Stand", "Sit", "Sleep", "Wake", "Eat", "Chew", "Swallow", "Speak", "Talk", "Say", "Drink", "Look", "See", "Watch", "Listen", "Hear", "Write", "Draw", "Sign", "Go", "Come", "Want", "Have", "Hit", "Kick", "Push", "Pull", "Open", "Close", "Put", "Take", "Enter", "Leave", "Order", "Demand", "Request", "Ask", "Answer"]
    },
    randomInteger: function(limit) {
      return Math.floor(Math.random() * limit);
    },
    randomWordInArray: function(arr, wordsToExclude) {
      var word;
      if (wordsToExclude == null) {
        wordsToExclude = [];
      }
      word = null;
      while ((word === null) || (wordsToExclude.indexOf(word) !== -1)) {
        word = arr[this.randomInteger(arr.length)];
      }
      return word;
    },
    generateCard: function() {
      this.hideCard();
      this.currentWords = {};
      this.currentWords.person = {
        word: this.randomWordInArray(this.words.person),
        allPlay: this.randomInteger(5) === 0
      };
      this.currentWords.object = {
        word: this.randomWordInArray(this.words.object),
        allPlay: this.randomInteger(5) === 0
      };
      this.currentWords.action = {
        word: this.randomWordInArray(this.words.action),
        allPlay: this.randomInteger(5) === 0
      };
      this.currentWords.difficult = {
        word: this.randomWordInArray(this.words.all, [this.currentWords.person.word, this.currentWords.object.word, this.currentWords.action.word]),
        allPlay: this.randomInteger(5) === 0
      };
      return this.currentWords.allPlay = {
        word: this.randomWordInArray(this.words.all, [this.currentWords.person.word, this.currentWords.object.word, this.currentWords.action.word, this.currentWords.difficult.word]),
        allPlay: true
      };
    },
    revealCard: function() {
      this.cardRevealed = true;
      $('.word-container.person .word').text(this.currentWords.person.word);
      if (this.currentWords.person.allPlay) {
        $('.word-container.person').addClass('allPlay');
      } else {
        $('.word-container.person').removeClass('allPlay');
      }
      $('.word-container.object .word').text(this.currentWords.object.word);
      if (this.currentWords.object.allPlay) {
        $('.word-container.object').addClass('allPlay');
      } else {
        $('.word-container.object').removeClass('allPlay');
      }
      $('.word-container.action .word').text(this.currentWords.action.word);
      if (this.currentWords.action.allPlay) {
        $('.word-container.action').addClass('allPlay');
      } else {
        $('.word-container.action').removeClass('allPlay');
      }
      $('.word-container.difficult .word').text(this.currentWords.difficult.word);
      if (this.currentWords.difficult.allPlay) {
        $('.word-container.difficult').addClass('allPlay');
      } else {
        $('.word-container.difficult').removeClass('allPlay');
      }
      $('.word-container.all-play .word').text(this.currentWords.allPlay.word);
      $('.word-container.all-play').addClass('allPlay');
      return $('.toggle-card span').text('Hide Card');
    },
    hideCard: function() {
      this.cardRevealed = false;
      $('.word-container.person .word').text("Person/Place/Animal");
      $('.word-container.object .word').text("Object");
      $('.word-container.action .word').text("Action");
      $('.word-container.difficult .word').text("Difficult");
      $('.word-container.all-play .word').text("All Play");
      $('.word-container').removeClass('allPlay');
      return $('.toggle-card span').text('Reveal Card');
    },
    toggleCard: function() {
      if (this.cardRevealed) {
        return this.hideCard();
      } else {
        return this.revealCard();
      }
    },
    init: function() {
      var i, j, k, len, len1, len2, ref, ref1, ref2, word;
      this.words.all = [];
      ref = this.words.person;
      for (i = 0, len = ref.length; i < len; i++) {
        word = ref[i];
        this.words.all.push(word);
      }
      ref1 = this.words.object;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        word = ref1[j];
        this.words.all.push(word);
      }
      ref2 = this.words.action;
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        word = ref2[k];
        this.words.all.push(word);
      }
      this.generateCard();
      this.hideCard();
      $('.toggle-card').click((function(_this) {
        return function(ev) {
          return _this.toggleCard();
        };
      })(this));
      return $('.change-card').click((function(_this) {
        return function(ev) {
          return _this.generateCard();
        };
      })(this));
    }
  };

  $(function() {
    return Pictionary.init();
  });

}).call(this);
